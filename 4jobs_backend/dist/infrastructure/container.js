"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.container = void 0;
require("reflect-metadata");
const inversify_1 = require("inversify");
const types_1 = __importDefault(require("../types"));
const MongoUserRepository_1 = require("./database/mongoose/repositories/MongoUserRepository");
const MongoRecruiterRepository_1 = require("./database/mongoose/repositories/MongoRecruiterRepository");
const JwtAuthService_1 = require("./services/JwtAuthService");
const OtpService_1 = require("./services/OtpService");
const NodemailerEmailService_1 = require("./services/NodemailerEmailService");
const GoogleAuthService_1 = require("./services/GoogleAuthService");
const LoginAdminUseCase_1 = require("../application/usecases/admin/LoginAdminUseCase");
const SignupUserUseCase_1 = require("../application/usecases/auth/SignupUserUseCase");
const registerRecruiter_1 = require("../application/usecases/recruiter/registerRecruiter");
const LoginRecruiterUseCase_1 = require("../application/usecases/recruiter/LoginRecruiterUseCase");
const LoginUseCase_1 = require("../application/usecases/auth/LoginUseCase");
const AdminController_1 = require("../presentation/controllers/AdminController");
const RecruiterController_1 = require("../presentation/controllers/recruiter/RecruiterController");
const AuthController_1 = require("../presentation/controllers/user/AuthController");
const GetUserProfileUseCase_1 = require("../application/usecases/auth/GetUserProfileUseCase");
const UpdateUserProfileUseCase_1 = require("../application/usecases/auth/UpdateUserProfileUseCase");
const ProfileController_1 = require("../presentation/controllers/user/ProfileController");
const MongoJobPostRepository_1 = require("../infrastructure/database/mongoose/repositories/MongoJobPostRepository");
const JobPostUseCase_1 = require("../application/usecases/recruiter/JobPostUseCase");
const JobPostController_1 = require("../presentation/controllers/recruiter/JobPostController");
const container = new inversify_1.Container();
exports.container = container;
container.bind(types_1.default.IUserRepository).to(MongoUserRepository_1.MongoUserRepository);
console.log("Binding MongoRecruiterRepository...");
container.bind(types_1.default.IRecruiterRepository).to(MongoRecruiterRepository_1.MongoRecruiterRepository);
container.bind(types_1.default.IAuthService).to(JwtAuthService_1.JwtAuthService);
container.bind(types_1.default.JwtSecret).toConstantValue(process.env.JWT_SECRET || 'secret_1');
container.bind(types_1.default.OtpService).toDynamicValue(() => new OtpService_1.OtpService(33 * 1000, container.get(types_1.default.NodemailerEmailService)));
container.bind(types_1.default.NodemailerEmailService).to(NodemailerEmailService_1.NodemailerEmailService);
container.bind(types_1.default.GoogleAuthService).to(GoogleAuthService_1.GoogleAuthService);
container.bind(types_1.default.LoginAdminUseCase).to(LoginAdminUseCase_1.LoginAdminUseCase);
container.bind(types_1.default.SignupUserUseCase).to(SignupUserUseCase_1.SignupUserUseCase);
container.bind(types_1.default.RegisterRecruiterUseCase).to(registerRecruiter_1.RegisterRecruiterUseCase);
container.bind(types_1.default.LoginRecruiterUseCase).to(LoginRecruiterUseCase_1.LoginRecruiterUseCase);
container.bind(types_1.default.LoginUseCase).to(LoginUseCase_1.LoginUseCase);
container.bind(types_1.default.JwtAuthService).to(JwtAuthService_1.JwtAuthService).inSingletonScope();
container.bind(types_1.default.AdminController).to(AdminController_1.AdminController);
container.bind(types_1.default.RecruiterController).to(RecruiterController_1.RecruiterController);
container.bind(types_1.default.AuthController).to(AuthController_1.AuthController);
container.bind(types_1.default.GetUserProfileUseCase).to(GetUserProfileUseCase_1.GetUserProfileUseCase);
container.bind(types_1.default.UpdateUserProfileUseCase).to(UpdateUserProfileUseCase_1.UpdateUserProfileUseCase);
container.bind(types_1.default.ProfileController).to(ProfileController_1.ProfileController);
container.bind(types_1.default.JobPostRepository).to(MongoJobPostRepository_1.MongoJobPostRepository);
container.bind(types_1.default.JobPostUseCase).to(JobPostUseCase_1.JobPostUseCase);
container.bind(types_1.default.JobPostController).to(JobPostController_1.JobPostController);
console.log(container);
